{
  "hash": "1700e72d608c69da540fb48585a14979",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"*Yersinia pestis* dashboard\"\nauthor:\n  - name: Benjamin TOURNAN\n    email: benjamin.tournan@univ-tlse3.fr\n  - name: Juliette GUTIERREZ\n  - name: Nicolas REQUIN\ndate: \"2023-11-30\"\nimage: \"yersinia.png\"\nlicense: \"CC BY-NC-ND\"\nknitr:\n  opts_chunk: \n    eval: false\nformat: \n  html: \n    toc: true\n    toc-depth: 4\n    toc-title: On this page\n    smooth-scroll: true\n    code-link: false\n    html-math-method: katex\n    theme: cosmo\n    email-obfuscation: javascript\n---\n\n\n## Check out the final project\n\nTo access the dashboard, simply click on [this link](https://benjamin-tournan.shinyapps.io/yersiniapestis_m2/).\n\nDetailed descriptions of the bioinformatic analyses can be found in the following tutorial.\n\n## Bioinformatics tutorial\n\nThis tutorial outlines the steps for SRA data retrieval, FastQC analysis, and PALEOMIX analysis, including reference genome preparation and execution scripts. Adjust the paths and parameters according to your specific setup.\n\n### SRA Data Retrieval\n\nIn this section, we'll walk through the steps to retrieve sequence data from the Sequence Read Archive (SRA) using a Bash script (`scr_SRA.sh`). The script uses the SRA Toolkit to download and convert SRA files to FASTQ format.\n\nNavigate to your project directory and create or open the script in the Nano text editor.\n\n\n::: {.cell}\n\n```{.bash .cell-code}\nnano scr_SRA.sh\n```\n:::\n\n\nIn this script, change the job name, the email address and the two variables : `Ref` and `Num_Accession`.\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n#!/bin/bash\n#SBATCH -J Spyrou_19_SRA\n#SBATCH --mem=99G\n#SBATCH --cpus-per-task=32\n#SBATCH --mail-type=BEGIN,END,FAIL\n#SBATCH --mail-user=benjamin.tournan@univ-tlse3.fr\n\nRef=\"Spyrou_19\"\nNum_Accession=\"PRJEB29990\"\n\n# Load modules\nmodule load bioinfo/SRA-Toolkit/3.0.2\n\n# Create a new directory that will contain the sequences\nmkdir -p $Ref\ncd $Ref || exit # Checks if the directory already exists\n\n# Download SRA data\nprefetch $Num_Accession || { echo \"prefetch failed\"; exit 1; }\n\n# Bring .sra out of the intermediate files\nfind . -mindepth 2 -type f -exec mv -t . {} +\n\n# Convert SRA source files to fastQ sequence files\nfasterq-dump *.sra || { echo \"fasterq-dump failed\"; exit 1; }\n\n# Remove .sra files and empty sub-directories\nrm *.sra\nfind . -mindepth 1 -maxdepth 1 -type d -exec rm -r {} \\;\n```\n:::\n\n\nOnce you've made the script executable using the `chmod +x` command, run the script.\n\n\n::: {.cell}\n\n```{.bash .cell-code}\nchmod +x scr_SRA.sh\nsbatch scr_SRA.sh\n```\n:::\n\n\nYou need to separate single-end and paired-end files in different sub-directories. Use the following commands to do so.\n\n\n::: {.cell}\n\n```{.bash .cell-code}\ncd Spyrou_19\nmkdir ../Spyrou_19_paired\nmv *_1.fastq ../Spyrou_19_paired\nmv *_2.fastq ../Spyrou_19_paired\n\n# Rename the current directory Spyrou_19_single.\ncd ..\nmv Spyrou_19 Spyrou_19_single\n```\n:::\n\n\n### FastQC Analysis\n\nNavigate to your project directory and create or open the script in the Nano text editor.\n\n\n::: {.cell}\n\n```{.bash .cell-code}\nnano scr_fastqc.sh\n```\n:::\n\n\nIn this script, change the job name, the email address and the directory.\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n#!/bin/bash\n#SBATCH -J Spyrou_19_fastqc\n#SBATCH --mem=64G\n#SBATCH --cpus-per-task=80\n#SBATCH --mail-type=BEGIN,END,FAIL\n#SBATCH --mail-user=benjamin.tournan@univ-tlse3.fr\n\n# Load module\nmodule load bioinfo/FastQC/0.12.1\nmodule load bioinfo/MultiQC/1.14\n\n# Change directory\ncd \"$(pwd)/Spyrou_19_paired\"\n\n# Launch analysis\nfor fichier in *.fastq\ndo\n    fastqc \"$fichier\"\ndone\n\nmultiqc . -o ..\n\nrm *fastqc.zip\nrm *fastqc.html\n```\n:::\n\n\nOnce you've made the script executable using the `chmod +x` command, run the script.\n\n\n::: {.cell}\n\n```{.bash .cell-code}\nchmod +x scr_fastqc.sh\nsbatch scr_fastqc.sh\n```\n:::\n\n\nOpen a new terminal window and execute the following command to retrieve the report from Genotoul.\n\n\n::: {.cell}\n\n```{.bash .cell-code}\nscp -r -p geranium@genobioinfo.toulouse.inrae.fr:/home/geranium/work/PJ_M2_ASO/Spyrou_19_paired/multiqc_report.html .\n```\n:::\n\n\n### Seqtk treatment\n\nTo effectively handle paired-end sequences fused into a singular sequence, it is imperative to employ the `Seqtk` to create new paired-end reads.\n\nNavigate to your project directory and create or open the script in the Nano text editor.\n\n\n::: {.cell}\n\n```{.bash .cell-code}\nnano scr_seqtk.sh\n```\n:::\n\n\nIn this script, change the job name, the email address and the two variables : `Ref` and `sequence_length`, you can find the sequence length in the MultiQC report.\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n#!/bin/bash\n#SBATCH -J Bos_11_seqtk\n#SBATCH --mem=64G\n#SBATCH --cpus-per-task=80\n#SBATCH --mail-type=BEGIN,END,FAIL\n#SBATCH --mail-user=benjamin.tournan@univ-tlse3.fr\n\n# Change this\nRef=\"Bos_11\"\nsequence_length=\"150\"\n\n# Move to the sequence directory\ncd \"$Ref\"\n\n# Trim length\ntrimlength=$((sequence_length / 2))\n\n# Create the folder for the output files\noutput_folder=\"${Ref}_seqtk\"\nmkdir -p \"$output_folder\"\n\n# Load the module\nmodule load bioinfo/Seqtk/1.3\n\n# Iterate through all FASTQ files in the directory\nfor file in *.fastq; do\n    # Extract the file name without the directory path\n    file_name=$(basename \"$file\")\n\n    # Remove the file name extension\n    base_name=$(echo \"$file_name\" | sed 's/\\.[^.]*$//')\n\n    # Apply seqtk and sed commands to each file\n    seqtk trimfq -b \"$trimlength\" \"$file\" | sed \"s/length=$sequence_length/length=$trimlength/g\" > \"${output_folder}/${base_name}_trimmed_1.fastq\"\n    seqtk trimfq -e \"$trimlength\" \"$file\" | sed \"s/length=$sequence_length/length=$trimlength/g\" > \"${output_folder}/${base_name}_trimmed_2.fastq\"\ndone\n```\n:::\n\n\nOnce you've made the script executable using the `chmod +x` command, run the script.\n\n\n::: {.cell}\n\n```{.bash .cell-code}\nchmod +x scr_seqtk.sh\nsbatch scr_seqtk.sh\n```\n:::\n\n\n### PALEOMIX Analysis\n\n#### Reference Genome Preparation\n\nThis step is only necessary the **first time** you set up your analysis pipeline. It involves preparing the reference genome for subsequent analysis.\n\nNavigate to your project directory and execute the following commands.\n\n\n::: {.cell width='60'}\n\n```{.bash .cell-code}\n# Create a directory for Yersinia pestis reference files\nmkdir -p Ref_Ypestis\ncd Ref_Ypestis\n\n# Download the genomic sequence file from NCBI\nwget ftp://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/009/065/GCF_000009065.1_ASM906v1/GCF_000009065.1_ASM906v1_genomic.fna.gz\n\n# Unzip the downloaded file\ngunzip GCF_000009065.1_ASM906v1_genomic.fna.gz\n\n# Split the genomic sequence file into individual FASTA files\ncsplit -z -f GCF_000009065.1_ -b %02d.fna GCF_000009065.1_ASM906v1_genomic.fna \"/>/\" '{*}'\n\n# Rename the split files for better identification\nmv GCF_000009065.1_00.fna GCF_000009065.1_chr.fasta\nmv GCF_000009065.1_01.fna GCF_000009065.1_pCD1.fasta\nmv GCF_000009065.1_02.fna GCF_000009065.1_pMT1.fasta\nmv GCF_000009065.1_03.fna GCF_000009065.1_pPCP1.fasta\n\n# Load required modules\nmodule load devel/Miniconda/Miniconda3\nmodule load bioinfo/PALEOMIX/1.3.8\n\n# Navigate to the home directory\ncd ~\n\n# Create a directory for JAR files and create a symbolic link to Picard JAR file\nmkdir -p ~/install/jar_root\nln -s /usr/local/bioinfo/src/Miniconda/Miniconda3/envs/paleomix-v1.3.7_env/share/picard-2.27.4-0/picard.jar ~/install/jar_root/\n```\n:::\n\n\n#### PALEOMIX Analysis Script\n\nBefore generating the makefile for the analysis pipeline, it's crucial to create a list of libraries. This step is essential for providing the necessary information about the libraries that will be processed in the subsequent analysis.\n\nPlease navigate to the directory where the sequences are located and execute the corresponding command.\n\nFor **paired-end** data, each library consists of two files: one for the forward reads (usually denoted as `*_1.fastq`) and another for the reverse reads (denoted as `*_2.fastq`). To facilitate the makefile creation, generate a list of libraries by specifying the corresponding file paths for each library.\n\n\n::: {.cell}\n\n```{.bash .cell-code}\nfor file in *_1.fastq; do\n    base=$(basename \"$file\" \"_1.fastq\")\n    echo \"    $base:\"\n    echo \"      Lane_$base: $(readlink -f ${base}_{Pair}.fastq)\"\ndone > libraries.txt\n```\n:::\n\n\nFor **single-end data**, each library consists of one file. To facilitate the makefile creation, generate a list of libraries by specifying the corresponding file paths for each library.\n\n\n::: {.cell}\n\n```{.bash .cell-code}\nfor file in *.fastq; do\n    base=$(basename \"$file\" \".fastq\")\n    echo \"    $base:\"\n    echo \"      Lane_$base: $(readlink -f ${base}.fastq)\"\ndone > libraries.txt\n```\n:::\n\n\nCopy the content of `libraries.txt` onto your computer and save it for the next step, ensuring to maintain proper indentation.\n\nNext, we generate the makefile, a configuration file for the PALEOMIX pipeline. The makefile contains instructions on how to process the data, including details about the reference genome, trimming parameters, and aligner settings. Generate the makefile within the directory where your earlier scripts are located.\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Load modules\nmodule load devel/Miniconda/Miniconda3\nmodule load bioinfo/PALEOMIX/1.3.8\n\n# Retrieve the makefile template and modify it\npaleomix bam_pipeline makefile > makefile.yaml\nnano makefile.yaml\n```\n:::\n\n\nOnce you've generated the `makefile.yaml`, utilize the Nano text editor to access it for required modifications. Adjust the mapping quality (Phred) to 25 within the BWA options. Subsequently, insert the specified `Prefixes` (ensure to update the path accordingly) and the contents of `libraries.txt` in the designated section.\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Settings for mappings performed using BWA\n    BWA:\n      # One of \"backtrack\", \"bwasw\", or \"mem\"; see the BWA documentation\n      # for a description of each algorithm (defaults to 'backtrack')\n      Algorithm: backtrack\n      # Filter aligned reads with a mapping quality (Phred) below this value\n      MinQuality: 25\n```\n:::\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Map of prefixes by name, each having a Path, which specifies the location of the\n# BWA/Bowtie2 index, and optional regions for which additional statistics are produced.\nPrefixes:\n  CO92_chromosome:\n    Path: /home/geranium/work/PJ_M2_ASO/Ref_Ypestis/GCF_000009065.1_chr.fasta\n  pCD1:\n    Path: /home/geranium/work/PJ_M2_ASO/Ref_Ypestis/GCF_000009065.1_pCD1.fasta\n  pMT1:\n    Path: /home/geranium/work/PJ_M2_ASO/Ref_Ypestis/GCF_000009065.1_pMT1.fasta\n  pPCP1:\n    Path: /home/geranium/work/PJ_M2_ASO/Ref_Ypestis/GCF_000009065.1_pPCP1.fasta\n```\n:::\n\n::: {.cell}\n\n```{.bash .cell-code}\n# Mapping targets are specified using the following structure. Replace 'NAME_OF_TARGET'\n# with the desired prefix for filenames.\nSpyrou19_single:  # NAME_OF_TARGET\n  Spyrou19_single:  # NAME_OF_SAMPLE (same as NAME_OF_TARGET)\n  \n# Paste the content of libraries.txt here\n    ERR3457581:\n      Lane_ERR3457581: /work/user/geranium/PJ_M2_ASO/Spyrou_19_single/ERR3457581.fastq\n    ERR3457582:\n      Lane_ERR3457582: /work/user/geranium/PJ_M2_ASO/Spyrou_19_single/ERR3457582.fastq\n# ...\n```\n:::\n\n\nPrior to proceeding to the subsequent stage, conduct a dry run with the following Bash command.\n\n\n::: {.cell}\n\n```{.bash .cell-code}\npaleomix bam_pipeline dryrun makefile.yaml\n```\n:::\n\n\n#### PALEOMIX Execution Script\n\nIn this final step, we set up and execute the paleogenomic analysis script to process the prepared data using the configured analysis pipeline. The script, named `scr_paleomix.sh`, is responsible for defining job parameters and initiating the analysis on a high-performance computing (HPC) environment.\n\nNavigate to your project directory and create or open the script in the Nano text editor.\n\n\n::: {.cell}\n\n```{.bash .cell-code}\nnano scr_paleomix.sh\n```\n:::\n\n\nIn this script, change the job name, the email address, the output and the `jar-root` directories. Make sure that this script is in the same location as the `makefile.yaml`.\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n#!/bin/bash\n#SBATCH -J Spyrou_19_paleomix\n#SBATCH --mem=99G\n#SBATCH --cpus-per-task=99\n#SBATCH --mail-type=BEGIN,END,FAIL\n#SBATCH --mail-user=benjamin.tournan@univ-tlse3.fr\n\npaleomix bam_pipeline run --destination=Spyrou_19_paired_output --max-threads 99 --jre-option=\"-Xmx4g\" --jar-root=\"/home/geranium/install/jar_root/\" makefile.yaml\n```\n:::\n\n::: {.cell}\n\n```{.bash .cell-code}\nchmod +x scr_paleomix.sh\nsbatch scr_paleomix.sh\n```\n:::\n\n\nAs the final step, it is essential to review the summary file generated during the analysis. The summary file provides a comprehensive overview of key metrics, including read mapping statistics, coverage information, and potential post-mortem DNA damage assessments.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}